// <auto-generated />
using System;
using Lapbase.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lapbase.Migrations
{
    [DbContext(typeof(LapbaseNewContext))]
    [Migration("20191005054519_modifiedExercise")]
    partial class modifiedExercise
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lapbase.Models.Advisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Advisor");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("Lapbase.Models.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CalorieCount");

                    b.Property<string>("Name");

                    b.Property<string>("pictureUrl");

                    b.HasKey("Id");

                    b.ToTable("Exercise");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28734a7b-9320-4715-a7e2-d97fc6c4e792"),
                            CalorieCount = 54,
                            Name = "PUSHUPS"
                        });
                });

            modelBuilder.Entity("Lapbase.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Date");

                    b.Property<int>("PatientId");

                    b.Property<int>("Type");

                    b.Property<string>("content");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Lapbase.Models.Food", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CalorieCount");

                    b.Property<string>("Name");

                    b.Property<string>("Unit");

                    b.HasKey("Id");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3c907d1-363a-49ce-a526-895f4b26cba6"),
                            CalorieCount = 295,
                            Name = "Burger",
                            Unit = "piece"
                        },
                        new
                        {
                            Id = new Guid("8cf5053e-c741-4e4b-9481-07fcd1caeb26"),
                            CalorieCount = 40,
                            Name = "Onion",
                            Unit = "piece"
                        },
                        new
                        {
                            Id = new Guid("a1bb6f8c-f367-4857-93f8-640042a79f0e"),
                            CalorieCount = 90,
                            Name = "Uncle Keith's Kappuccino",
                            Unit = "cup"
                        },
                        new
                        {
                            Id = new Guid("352d8e7d-aabe-4eff-bcb8-7e8b7316b950"),
                            CalorieCount = 96,
                            Name = "White bread",
                            Unit = "slice"
                        },
                        new
                        {
                            Id = new Guid("7d46de2b-e2fd-4568-8c12-f07824a01859"),
                            CalorieCount = 44,
                            Name = "Apple",
                            Unit = "apple"
                        },
                        new
                        {
                            Id = new Guid("88045e5d-7604-46db-bfc2-0577e4bee4c5"),
                            CalorieCount = 107,
                            Name = "Banana",
                            Unit = "banana"
                        },
                        new
                        {
                            Id = new Guid("c0ba6223-085f-445a-9891-850843967ba4"),
                            CalorieCount = 30,
                            Name = "Tomato",
                            Unit = "tomato"
                        },
                        new
                        {
                            Id = new Guid("3153e76d-a5ce-4646-aa67-3e9bdfc05a86"),
                            CalorieCount = 50,
                            Name = "Roti",
                            Unit = "slice"
                        },
                        new
                        {
                            Id = new Guid("8b22cd60-a653-4b89-b2ec-f71e38626977"),
                            CalorieCount = 40,
                            Name = "Rice",
                            Unit = "cup"
                        },
                        new
                        {
                            Id = new Guid("0384b39f-6bef-4668-aa9e-3264b88ef2ff"),
                            CalorieCount = 600,
                            Name = "Halal Pork",
                            Unit = "piece"
                        },
                        new
                        {
                            Id = new Guid("8ad6dc0d-733d-47be-afd9-79e7af8e0caa"),
                            CalorieCount = 300,
                            Name = "Habib-Style Shwarma",
                            Unit = "shwarma"
                        },
                        new
                        {
                            Id = new Guid("92ba26ba-3c56-4854-b0d9-cb3607118ec3"),
                            CalorieCount = 300,
                            Name = "Meat Platter",
                            Unit = "platter"
                        },
                        new
                        {
                            Id = new Guid("d343fe52-df8a-46a8-8266-8db01595a082"),
                            CalorieCount = 350,
                            Name = "Mooncake",
                            Unit = "mooncake"
                        },
                        new
                        {
                            Id = new Guid("eb018b73-2983-4ab9-a6da-77c3e2896206"),
                            CalorieCount = 400,
                            Name = "HSP",
                            Unit = "box"
                        });
                });

            modelBuilder.Entity("Lapbase.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvisorId");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Username");

                    b.Property<DateTimeOffset>("ValidFrom");

                    b.Property<DateTimeOffset>("ValidTo");

                    b.Property<DateTimeOffset>("WhenCreated");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorId");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdvisorId = 1,
                            Deleted = false,
                            Username = "test@test.com",
                            ValidFrom = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ValidTo = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            WhenCreated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Lapbase.Models.TaskInput", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Calories");

                    b.Property<bool>("Completed");

                    b.Property<DateTimeOffset>("DateAssigned");

                    b.Property<string>("ExerciseReps");

                    b.Property<string>("Exercises");

                    b.Property<string>("FoodQuantities");

                    b.Property<string>("Foods");

                    b.Property<string>("MealTimes");

                    b.Property<int>("OrganizationCode");

                    b.Property<int>("PatientId");

                    b.Property<decimal>("Weight");

                    b.HasKey("Id");

                    b.ToTable("TaskInput");
                });

            modelBuilder.Entity("Lapbase.Models.Feedback", b =>
                {
                    b.HasOne("Lapbase.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Lapbase.Models.Patient", b =>
                {
                    b.HasOne("Lapbase.Models.Advisor", "Advisor")
                        .WithMany("Patients")
                        .HasForeignKey("AdvisorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
