// <auto-generated />
using System;
using Lapbase.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lapbase.Migrations
{
    [DbContext(typeof(LapbaseNewContext))]
    [Migration("20191010033502_anotherMigration")]
    partial class anotherMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lapbase.Models.Advisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Advisor");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("Lapbase.Models.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CalorieCount");

                    b.Property<string>("Name");

                    b.Property<string>("pictureUrl");

                    b.HasKey("Id");

                    b.ToTable("Exercise");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0df17c2-2ef5-46c9-9bae-231729334886"),
                            CalorieCount = 54,
                            Name = "PUSHUPS"
                        });
                });

            modelBuilder.Entity("Lapbase.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Date");

                    b.Property<int>("PatientId");

                    b.Property<int>("Type");

                    b.Property<string>("content");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Lapbase.Models.Food", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CalorieCount");

                    b.Property<string>("Name");

                    b.Property<string>("Unit");

                    b.HasKey("Id");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08e983e2-0079-4d8e-94b0-9416ea9115e9"),
                            CalorieCount = 295,
                            Name = "Burger",
                            Unit = "piece"
                        },
                        new
                        {
                            Id = new Guid("bb3b789c-91f9-42ea-8c67-3bb4e318a148"),
                            CalorieCount = 40,
                            Name = "Onion",
                            Unit = "piece"
                        },
                        new
                        {
                            Id = new Guid("3f28f7ce-a588-47c8-b597-79a434dd5833"),
                            CalorieCount = 90,
                            Name = "Uncle Keith's Kappuccino",
                            Unit = "cup"
                        },
                        new
                        {
                            Id = new Guid("723fdb04-8cc1-4f00-898c-c8c62fd75d7e"),
                            CalorieCount = 96,
                            Name = "White bread",
                            Unit = "slice"
                        },
                        new
                        {
                            Id = new Guid("474bfbc4-fd9b-48ea-b555-1425c6f1df63"),
                            CalorieCount = 44,
                            Name = "Apple",
                            Unit = "apple"
                        },
                        new
                        {
                            Id = new Guid("d8bab3e4-9eab-4348-9903-186dfd221e68"),
                            CalorieCount = 107,
                            Name = "Banana",
                            Unit = "banana"
                        },
                        new
                        {
                            Id = new Guid("ff02503f-5d7e-44c3-8223-4a7f3eb73dc3"),
                            CalorieCount = 30,
                            Name = "Tomato",
                            Unit = "tomato"
                        },
                        new
                        {
                            Id = new Guid("370ecb7d-5f28-4d69-bc93-2aa876d46c4f"),
                            CalorieCount = 50,
                            Name = "Roti",
                            Unit = "slice"
                        },
                        new
                        {
                            Id = new Guid("ff0236eb-9a0e-495a-9168-38937832724d"),
                            CalorieCount = 40,
                            Name = "Rice",
                            Unit = "cup"
                        },
                        new
                        {
                            Id = new Guid("68f9136d-544b-422d-b4f0-8b09d3bd32d7"),
                            CalorieCount = 600,
                            Name = "Halal Pork",
                            Unit = "piece"
                        },
                        new
                        {
                            Id = new Guid("39e0f3aa-ba45-457a-beed-e811b397d873"),
                            CalorieCount = 300,
                            Name = "Habib-Style Shwarma",
                            Unit = "shwarma"
                        },
                        new
                        {
                            Id = new Guid("b27d8053-28c0-46b6-92e6-11209dc2a726"),
                            CalorieCount = 300,
                            Name = "Meat Platter",
                            Unit = "platter"
                        },
                        new
                        {
                            Id = new Guid("bb5a4788-6fe6-418e-8a71-6b395b9dc1ac"),
                            CalorieCount = 350,
                            Name = "Mooncake",
                            Unit = "mooncake"
                        },
                        new
                        {
                            Id = new Guid("522117f0-1a4d-409b-baa4-ed96442bae8c"),
                            CalorieCount = 400,
                            Name = "HSP",
                            Unit = "box"
                        });
                });

            modelBuilder.Entity("Lapbase.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvisorId");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Username");

                    b.Property<DateTimeOffset>("ValidFrom");

                    b.Property<DateTimeOffset>("ValidTo");

                    b.Property<DateTimeOffset>("WhenCreated");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorId");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdvisorId = 1,
                            Deleted = false,
                            Username = "test@test.com",
                            ValidFrom = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ValidTo = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            WhenCreated = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Lapbase.Models.TaskInput", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CaloriesGained");

                    b.Property<decimal>("CaloriesLost");

                    b.Property<bool>("Completed");

                    b.Property<DateTimeOffset>("DateAssigned");

                    b.Property<string>("ExerciseReps");

                    b.Property<string>("Exercises");

                    b.Property<string>("FoodQuantities");

                    b.Property<string>("Foods");

                    b.Property<string>("MealTimes");

                    b.Property<int>("OrganizationCode");

                    b.Property<int>("PatientId");

                    b.Property<decimal>("Weight");

                    b.HasKey("Id");

                    b.ToTable("TaskInput");
                });

            modelBuilder.Entity("Lapbase.Models.Feedback", b =>
                {
                    b.HasOne("Lapbase.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Lapbase.Models.Patient", b =>
                {
                    b.HasOne("Lapbase.Models.Advisor", "Advisor")
                        .WithMany("Patients")
                        .HasForeignKey("AdvisorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
